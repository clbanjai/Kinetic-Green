<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>County-Level Energy Demand Map</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.3/leaflet.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.3/leaflet.js"></script>
    <style>
        body {
            margin: 0;
            background-color: black;
            color: white;
            font-family: Arial, sans-serif;
        }

        #map {
            height: 100vh;
            width: 100%;
        }

        #infoPanel {
            position: fixed;
            top: 0;
            right: 0px;
            width: 300px;
            height: 100vh;
            background: black;
            color: white;
            box-shadow: -2px 0 5px rgba(0, 0, 0, 0.5);
            padding: 20px;
            transition: right 0.3s ease; /* Ensure transition is applied */
            overflow-y: auto;
            z-index: 1000; /* Bring panel above other elements */
        }

        #infoPanel h2 {
            margin-top: 0;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <div id="infoPanel">
        <h2>County Information</h2>
        <div id="countyInfo">
            <p><b>County:</b> Select a county to see details.</p>
            <p><b>Energy Demand (MWh):</b> </p>
            <p><b>Cost (Millions):</b> </p>
        </div>
    </div>

    <script>
        // Create the map object and set its view to encompass both Texas and California
        const map = L.map('map').setView([36.0, -105.0], 5);

        // Use a dark tile layer for the map background
        L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
            attribution: 'Map data &copy; OpenStreetMap contributors &copy; CARTO',
            opacity: 1
        }).addTo(map);

        // Function to set color based on energy demand value
        function getColor(score) {
            return score > 8 ? '#006837' :
                   score > 6 ? '#31a354' :
                   score > 4 ? '#78c679' :
                   score > 2 ? '#c2e699' :
                               '#ffffcc';
        }

        // Adding geoJSON layer for counties with energy demand data
        async function loadCountyData() {
            const grid = await fetch('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json');
            if (!grid.ok) {
                throw new Error(`HTTP error! status: ${grid.status}`);
            }
            const grid_data = await grid.json();

            const scores = await fetch('county_data');
            if (!scores.ok) {
                throw new Error(`HTTP error! status: ${scores.status}`);
            }
            const score_data = await scores.json();

            // Placeholder energy demand data (replace with actual data)
            const energyDemand = {
                // Texas counties
                "48001": 300,
                "48003": 120,
                "48005": 50,
                // ... more Texas counties
                // California counties
                "06001": 400,
                "06013": 250,
                "06037": 500,
                // ... more California counties
            };

            // Include both Texas and California
            const selectedStates = ["48"];

            const texas = {
                "type": "FeatureCollection",
                "features": data.features.filter(county => selectedStates.includes(tx.properties.STATE))
            };

            // Add counties to the map
            const geoJsonLayer = L.geoJson(counties, {
                style: function (county) {
                    return {
                        fillColor: getColor(Math.floor(Math.random() * 300)),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        fillOpacity: 0.7
                    };
                },
                onEachFeature: function (county, layer) {
                    layer.on({
                        mouseover: function (e) {
                            e.target.setStyle({
                                weight: 3,
                            });
                        },
                        mouseout: function (e) {
                            geoJsonLayer.resetStyle(e.target);
                        },
                        click: function (e) {

                            const countyName = feature.properties.NAME;
                            const demand = Math.floor(Math.random() * 300);
                            const cost = "5,000,000 USD"; // Placeholder cost value

                            document.getElementById('countyInfo').innerHTML = `
                                <p><b>County:</b> ${countyName}</p>
                                <p><b>Energy Demand (MWh):</b> ${demand}</p>
                                <p><b>Cost (Millions):</b> ${cost}</p>
                            `;
                        }
                    });
                }
            }).addTo(map);
        }

        loadCountyData();
    </script>
</body>
</html>
